# versions and sizes from here: https://hub.docker.com/r/intel/oneapi-hpckit/tags
FROM intel/oneapi-hpckit:latest

RUN apt update \
    && apt -y install \
    cmake \
    curl \
    gcc \
    gfortran \
    git \
    lcov \
    libcurl4-openssl-dev \
    libhdf5-dev \
    libnetcdff-dev \
    m4 \
    make \
    nlohmann-json3-dev \
    valgrind \ 
    vim \
    zlib1g-dev \
    && apt clean 

# Set environment variables to install MUSICA using gcc
ENV FC=gfortran
ENV FFLAGS="-I/usr/include/"

# Install json-fortran for gnu version
RUN curl -LO https://github.com/jacobwilliams/json-fortran/archive/8.2.0.tar.gz \
    && tar -zxvf 8.2.0.tar.gz \
    && cd json-fortran-8.2.0 \
    && mkdir build \
    && cd build \
    && cmake -D SKIP_DOC_GEN:BOOL=TRUE .. \
    && make install


# Set json-fortran variable to install MUSICA using gcc
ENV JSON_FORTRAN_HOME="/usr/local/jsonfortran-gnu-8.2.0"

# Copy the musica code
COPY . musica

# Build and install MUSICA
RUN cd musica \
    && cmake -S . \
             -B build \
             -D MUSICA_ENABLE_TESTS=ON \
             -D MUSICA_ENABLE_TUVX=OFF \
             -D CMAKE_BUILD_TYPE=Debug \
    && cd build \
    && make install

# Set environment variables to build MUSICA-Fortran using intel compilers
ENV CC=icx
ENV CXX=icpx
ENV FC=ifx

RUN cd musica/fortran/test/fetch_content_integration \
    && mkdir build && cd build \
    && cmake .. \
        -D CMAKE_BUILD_TYPE=Debug \
    && make

RUN cp -r /musica/configs/chapman musica/fortran/test/fetch_content_integration/build

WORKDIR musica/fortran/test/fetch_content_integration/build